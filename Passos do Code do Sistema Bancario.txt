# Documentação do Projeto Bancário

## Classe `Banco`
A classe `Banco` é responsável por gerenciar as operações básicas de um sistema bancário, incluindo depósito, saque e exibição de extrato.

### Inicialização
O método `__init__` é o construtor da classe e define os atributos principais da conta:
- **saldo**: Inicializado com 0.0, representa o saldo atual da conta.
- **limite**: Define o limite máximo para saques, configurado para R$ 500.00.
- **extrato**: Armazena as movimentações realizadas na conta como uma string.
- **numero_saques**: Contador de saques realizados, inicializado como 0.
- **LIMITE_SAQUES**: Valor constante que limita o número de saques por dia (configurado como 3).

---

### Métodos

#### `depositar(self, valor)`
Realiza um depósito na conta bancária.
- **Parâmetros**:
  - `valor` (float): Valor a ser depositado.
- **Comportamento**:
  - Verifica se o valor informado é maior que zero.
  - Caso válido, incrementa o saldo e adiciona o depósito ao extrato.
  - Caso inválido, exibe uma mensagem de falha.

#### `sacar(self, valor)`
Realiza um saque da conta, considerando as seguintes restrições:
- O saldo deve ser suficiente.
- O valor do saque não pode exceder o limite permitido (R$ 500.00).
- O número máximo de saques diários (3) não pode ser excedido.
- **Parâmetros**:
  - `valor` (float): Valor a ser sacado.
- **Comportamento**:
  - Caso válido, reduz o saldo, adiciona o saque ao extrato e incrementa o contador de saques.
  - Caso inválido, exibe mensagens de erro explicando o motivo (saldo insuficiente, limite excedido, etc.).

#### `exibir_extrato(self)`
Exibe o histórico de movimentações realizadas na conta e o saldo atual.
- **Comportamento**:
  - Imprime o extrato caso existam movimentações.
  - Caso contrário, informa que não foram realizadas movimentações.

#### `executar(self)`
Gera o menu interativo para o usuário e permite realizar operações na conta.
- **Opções do Menu**:
  - `[d] Depositar`: Permite ao usuário realizar um depósito, solicitando o valor a ser depositado.
  - `[s] Sacar`: Permite realizar um saque, solicitando o valor desejado.
  - `[e] Extrato`: Exibe o histórico de movimentações e o saldo atual.
  - `[q] Sair`: Finaliza o programa.
- **Comportamento**:
  - Solicita ao usuário a escolha de uma opção.
  - Executa a operação correspondente ou exibe uma mensagem de erro caso a opção seja inválida.

---

### Execução do Programa
O bloco principal do programa é executado quando o arquivo é executado diretamente.
- **Comportamento**:
  - Cria uma instância da classe `Banco`.
  - Chama o método `executar` para iniciar o sistema bancário.

```python
if __name__ == "__main__":
    banco = Banco()
    banco.executar()
```